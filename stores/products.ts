import { Product } from "~/types"

export const useProductsStore = defineStore("products", {
  state: () => ({
    allProducts: [
      {
        category: "Asian",
        name: "Sushi Roll",
        calories: 250,
        carbs: 35,
        protein: 15,
        fat: 5,
        price: 8.99,
        url: "https://example.com/sushi-roll",
        id: 0,
      },
      {
        category: "Asian",
        name: "Pad Thai",
        calories: 400,
        carbs: 50,
        protein: 10,
        fat: 15,
        price: 9.99,
        url: "https://example.com/pad-thai",
        id: 1,
      },
      {
        category: "Asian",
        name: "Miso Soup",
        calories: 70,
        carbs: 10,
        protein: 5,
        fat: 2,
        price: 3.99,
        url: "https://example.com/miso-soup",
        id: 2,
      },
      {
        category: "Asian",
        name: "Bibimbap",
        calories: 500,
        carbs: 60,
        protein: 20,
        fat: 12,
        price: 11.99,
        url: "https://example.com/bibimbap",
        id: 3,
      },
      {
        category: "Mexican",
        name: "Taco",
        calories: 200,
        carbs: 20,
        protein: 12,
        fat: 8,
        price: 5.99,
        url: "https://example.com/taco",
        id: 4,
      },
      {
        category: "Mexican",
        name: "Burrito",
        calories: 450,
        carbs: 40,
        protein: 20,
        fat: 15,
        price: 7.49,
        url: "https://example.com/burrito",
        id: 5,
      },
      {
        category: "Mexican",
        name: "Enchiladas",
        calories: 300,
        carbs: 25,
        protein: 15,
        fat: 12,
        price: 6.99,
        url: "https://example.com/enchiladas",
        id: 6,
      },
      {
        category: "Mexican",
        name: "Quesadilla",
        calories: 350,
        carbs: 30,
        protein: 18,
        fat: 15,
        price: 6.49,
        url: "https://example.com/quesadilla",
        id: 7,
      },
      {
        category: "Fast Food",
        name: "Cheeseburger",
        calories: 350,
        carbs: 30,
        protein: 20,
        fat: 18,
        price: 6.49,
        url: "https://example.com/cheeseburger",
        id: 8,
      },
      {
        category: "Fast Food",
        name: "French Fries",
        calories: 300,
        carbs: 40,
        protein: 4,
        fat: 15,
        price: 3.99,
        url: "https://example.com/french-fries",
        id: 9,
      },
      {
        category: "Fast Food",
        name: "Chicken Nuggets",
        calories: 250,
        carbs: 20,
        protein: 15,
        fat: 12,
        price: 4.99,
        url: "https://example.com/chicken-nuggets",
        id: 10,
      },
      {
        category: "Fast Food",
        name: "Pizza Slice",
        calories: 320,
        carbs: 30,
        protein: 12,
        fat: 16,
        price: 2.99,
        url: "https://example.com/pizza-slice",
        id: 11,
      },
      {
        category: "American",
        name: "BBQ Ribs",
        calories: 450,
        carbs: 10,
        protein: 30,
        fat: 35,
        price: 12.99,
        url: "https://example.com/bbq-ribs",
        id: 12,
      },
      {
        category: "American",
        name: "Hamburger Hot Dog combo",
        calories: 400,
        carbs: 25,
        protein: 18,
        fat: 22,
        price: 8.99,
        url: "https://example.com/hamburger",
        id: 13,
      },
      {
        category: "American",
        name: "Caesar Salad",
        calories: 150,
        carbs: 10,
        protein: 8,
        fat: 10,
        price: 5.99,
        url: "https://example.com/caesar-salad",
        id: 14,
      },
      {
        category: "American",
        name: "Hot Dog",
        calories: 280,
        carbs: 20,
        protein: 10,
        fat: 18,
        price: 4.99,
        url: "https://example.com/hot-dog",
        id: 15,
      },
      {
        category: "Vegetarian",
        name: "Caprese Salad",
        calories: 200,
        carbs: 8,
        protein: 10,
        fat: 15,
        price: 6.99,
        url: "https://example.com/caprese-salad",
        id: 16,
      },
      {
        category: "Vegetarian",
        name: "Veggie Burger",
        calories: 300,
        carbs: 25,
        protein: 15,
        fat: 12,
        price: 7.49,
        url: "https://example.com/veggie-burger",
        id: 17,
      },
      {
        category: "Vegetarian",
        name: "Mushroom Risotto",
        calories: 350,
        carbs: 40,
        protein: 10,
        fat: 8,
        price: 9.99,
        url: "https://example.com/mushroom-risotto",
        id: 18,
      },
      {
        category: "Italian",
        name: "Margherita Pizza",
        calories: 280,
        carbs: 35,
        protein: 12,
        fat: 10,
        price: 10.99,
        url: "https://example.com/margherita-pizza",
        id: 19,
      },
      {
        category: "Italian",
        name: "Pasta Carbonara",
        calories: 400,
        carbs: 50,
        protein: 18,
        fat: 20,
        price: 11.99,
        url: "https://example.com/pasta-carbonara",
        id: 20,
      },
      {
        category: "Italian",
        name: "Tiramisu",
        calories: 320,
        carbs: 25,
        protein: 5,
        fat: 22,
        price: 7.99,
        url: "https://example.com/tiramisu",
        id: 21,
      },
    ] as Product[],
  }),
  getters: {
    getAllUniqueCategories: (state) => {
      let categories = state.allProducts.map((product) => product.category)
      categories = categories.filter(
        (category, index, arr) => arr.indexOf(category) == index
      )
      return categories
    },
    getProductsByCategory: (state) => {
      return (category: string) => {
        return state.allProducts.filter(
          (product) =>
            product.category.toLowerCase().replace(" ", "") == category
        )
      }
    },
    getProduct: (state) => {
      return (id: number) => {
        return state.allProducts.find((product) => product.id == id)
      }
    },
  },
})
